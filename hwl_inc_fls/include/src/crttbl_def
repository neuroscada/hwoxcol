#if	!defined( CRTSZ )

/*                             CRTTBL - crt control table */
/*                             -------------------------- */

/*     REVISION: */
/*         @(#)crttbl_def	main.SVR_MASTERPROJ_Integration.R0930_Int.8 */

/*     DESCRIPTION: */
/*         The structure of the crt table is declared in this file. */
/*         This table is indexed by the crt number. */


/*         Note: Station security is implemented as 6 level as follows. */
/*                             0 - inhibit alarm ack and data entry */
/*                             1 - inhibit data entry */
/*                             2 - dfd level 0 */
/*                             3 - dfd level 1 */
/*                             4 - dfd level 2 */
/*                             5 - dfd level 3 */
/*               If login is not used, then the base level is 2. */


#if	!defined( POINT_SERVER )
#if	!defined( HSC_POINT_SERVER )
#include	"system"
#include	"src/aasprf_def"
#include	"src/contbl_def"
#include	"src/hsctypes_def"
#include	"src/platform"
#endif	
#endif	

#define	CRTSZ	3704    /*  size of a CRTTBL record, make sure data\crttbl.src is also updated */

#define	XCHSZ	100 /*  world coordinates per character (x direction) */
#define	YCHSZ	100 /*  world coordinates per character (y direction) */
#define	DSPNMSZ	2048 /*  display name length */
#define	IDLNMSZ	260 /*  idle display name length */
#define	CRTNAM_SZ	16 /*  CRT name size in bytes */
#define	CRTOID_SZ	25 /*  size of CRTOID in words */
#define	LVLPSW_SZ	3 /*  size of level n passwords in words (same size as CONPSW_SZ defined in contbl) */
#define	CRTDTS_SZ	41 /*  size of detail search string in words */
#define	CRTDTN_SZ	41 /*  size of detail name string in words */
#define	CRTCVL_SZ	256 /*  Length of control value string in bytes */

#define	STN_FMT_BRIEF	0x0001	 /*  brief station format (STN01 or CSTN01-2) as opposed to (STATION  1 or CONSOLE STATION  1) */
#define	STN_FMT_UPPERCASE	0x0002	 /*  all uppercase (STN01) instead of (Stn01) */
#define	STN_FMT_NOPREFIX	0x0004	 /*  don't use a prefix (eg STATION, CSTN, etc) */
#define	MAX_STN_NAME_SZ	9  /*  max string size for station name (brief format, eg STN01 or CSTN01-2) */

#define	CRTGRPS_SZ	16 /*  max number Groups Oper is a member of */
#define	CRTIPADDR_SZ	8 /*  length of IP address string in words */
#define	CRTIPNAME_SZ	16 /*  length of client machine name string in words */

#define	ACM_SZ	1024/16  /*  size of Asset Capability Maps */


/*                                       5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 */
/*                                      --------------------------------- */
/*                FLAGS1              1 !A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P! */
/*                                      --------------------------------- */
#define	CRT_FLAGS1	1
#define	STN_ONLINE	0x8000	 /*  15 A - CRT on-line */
#define	STN_OK	0x4000	 /*  14 B - CRT (0=fail 1=OK) */
/*                                       = z'2000' ;* 13 C - SPARE */
/*                                       = z'1000' ;* 12 D - SPARE */
/*                                       = z'0800' ;* 11 E - SPARE */
/*                                       = z'0400' ;* 10 F - SPARE */
/*                                       = z'0200' ;*  9 G - SPARE */
/*                                       = z'0100' ;*  8 H - SPARE */
#define	STN_CANCEL	0x0080	 /*   7 I - cancel current operation */
#define	STN_TERM	0x0040	 /*   6 J - request termination of display */
#define	STN_SPSNOW	0x0020	 /*   5 K - SPS scanned data */
#define	STN_PRTUPD	0x0010	 /*   4 L - print update */
#define	STN_ALMUPD	0x0008	 /*   3 M - alarm update */
#define	STN_PERUPD	0x0004	 /*   2 N - periodic update */
#define	STN_FULUPD	0x0002	 /*   1 O - full update */
#define	STN_NRMUPD	0x0001	 /*   0 P - normal update (changed data only) */
#define	STN_ANYUPD	0x000F	 /*         any update */

#define	CRTFLAGS2	14
/*                                      --------------------------------- */
/*		FLAGS2              14 !A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P! */
/*                                      --------------------------------- */
/*					 = z'8000' ;* 15 A - display build mode */
/*					 = z'4000' ;* 14 B - background build */
/*					 = z'2000' ;* 13 C - shape build */
/*					 = z'1000' ;* 12 D - builder page displayed */
#define	STN_FREEZE	0x0800	 /*  11 E - all updates frozen */
#define	OPRMSG_FREEZE	0x0400	 /*  10 F - operator message frozen */
#define	STN_OPLGON	0x0200	 /*   9 G - operator logged on */
#define	STN_TIMEOUTS	0x0100	 /*   8 H - station timeouts enabled */
#define	STN_LOCKOUT	0x0080	 /*   7 I - station is locked out or not */
#define	STN_RCRRD	0x0040	 /*   6 J - record change requires re display */
#define	STN_SSSD	0x0020	 /*   5 K - station setting startup displays */
#define	STN_ROTDSCNT	0x0010	 /*   4 L - signal ripsd to disconnect the rotary connection */
#define	STN_FAST	0x0008	 /*   3 M - station in FAST mode (fast key pressed) */
#define	STN_FAILSUP	0x0004	 /*   2 N - suppress the next CRT fail alarm */
#define	STN_FAILSUP_BIT	2
/*					 = z'0002' ;*  1 O - */
/*					 = z'0001' ;*  0 P - */

#define	CRTFLAGS3	15
/*                                      --------------------------------- */
/*		FLAGS3              15 !A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P! */
/*                                      --------------------------------- */
#define	STN_SPSEDU	0x8000	 /*  15 A - enable SPS for scan data (every display update) */
#define	STN_ENOPLG	0x4000	 /*  14 B - enable operator login */
#define	STN_IPOSTND	0x2000	 /*  13 C - enable IPOS trending */
#define	STN_USEPRF	0x1000	 /*  12 D - use asset profile assignment */
/*                                           = z'0800' ;* 11 E - SPARE (not used) */
/*                                           = z'0400' ;* 10 F - SPARE (not used) */
/*                                           = z'0200' ;*  9 G - SPARE (not used) */
/*                                           = z'0100' ;*  8 H - SPARE (not used) */
#define	STN_SPSDCU	0x0080	 /*   7 I - enable SPS for scan data (display callup only) */
#define	STN_IDLCLR	0x0040	 /*   6 J - enable clear screen on idle timeout */
#define	STN_SPSWAI	0x0020	 /*   5 K - wait for SPS results */
/*                                           = z'0010' ;*  4 L - enable card image recall */
#define	STN_ASCFEXCLUDE	0x0008	 /*   3 M - EXCLUDE - Alarm summary - Clear filter on new alarm (EBI only, ISR204673) */
#define	STN_TOUCH_PANEL	0x0004	 /*   2 N - enable opertaor touch pannel */
#define	STN_LOGERR	0x0002	 /*   1 O - enable crt error iorb print */
#define	STN_ALMFAIL	0x0001	 /*   0 P - enable crt fail alarm */

/*                                      --------------------------------- */
/*                                   16 !X!     display number          ! */
/*                                      --------------------------------- */
/*                                        X - background displayed */

/*                                      --------------------------------- */
/*                CRTSTA             25 ! CRT state                     ! */
/*                                      --------------------------------- */

/*					  0 ;*  normal */
#define	CRTSTA_PWC	1 /*   password change */
#define	CRTSTA_PGC	2 /*   page callup */
#define	CRTSTA_TDC	3 /*   trend callup */
#define	CRTSTA_OGC	4 /*   operating group callup */
#define	CRTSTA_TGC	5 /*   trend     group callup */
#define	CRTSTA_HGC	6 /*   history   group callup */
#define	CRTSTA_EVT	7 /*   user generated event */
#define	CRTSTA_PVL	9 /*   new password validation */
#define	CRTSTA_PCF	10 /*   new password confirm */
#define	CRTSTA_CRQ	11 /*   control request */
#define	CRTSTA_HUR	12 /*   hiway upload of RTU */
#define	CRTSTA_HDR	13 /*   hiway download of RTU */
#define	CRTSTA_HUC	14 /*   hiway upload of channel */
#define	CRTSTA_HDC	15 /*   hiway download of channel */
#define	CRTSTA_OPW	16 /*   old password check */
#define	CRTSTA_CCF	17 /*   control confirmation request */
#define	CRTSTA_DET	19 /*   point detail callup */
#define	CRTSTA_CHD	20 /*   cardholder detail callup */
#define	CRTSTA_SNC	21 /*   GDA Server Name Change Confirm request */
#define	CRTSTA_SDL	22 /*   GDA server Name deletion confirm request */
#define	CRTSTA_PSC	23 /*   Point Server Type Change confirm request */
#define	CRTSTA_PSD	24 /*   Point Server Type deletion confirm request */
#define	CRTSTA_PAC	25 /*   Page ack if nothing selected */
#define	CRTSTA_DSC	26 /*   Direct Station Name Change Confirm request */
#define	CRTSTA_DSD	27 /*   Direct Station Name deletion confirm request */
#define	CRTSTA_AMC	28 /*   Area mapping option change confirm request */
#define	CRTSTA_CAM	29 /*   Custom area mapping change confirm request */
#define	CRTSTA_CNC	30 /*   Console Name Change Confirm request */
#define	CRTSTA_CND	31 /*   Console Name deletion confirm request */
#define	CRTSTA_HST	32 /*   History reassignment request */
#define	CRTSTA_SAM	33 /*   Single area mapping change confirm request */
#define	CRTSTA_CON	34 /*   database word control confirmation request */

/*                                      --------------------------------- */
/*                CRTAPSOPR          36 |  Advanced Param SecLvl Oper   | */
/*                                      --------------------------------- */
#define	CRTAPSOPR_WRD	36  /*  */

/*                                      --------------------------------- */
/*                CRTKBL             37 !A!  B  !   C   !  keyboard LRN ! */
/*                                      --------------------------------- */

#define	CRTKBL_WRD	37  /*  */
#define	CRTKBD_BIT	8   /*  */
#define	CRTKBD_WTH	4   /*  */
#define	KBD_ONLINE	0x8000	 /*  15 A - keyboard connected */
#define	STN_DGTYPE	0x7000	 /*  12 B - display generator type (0- 7) */
#define	STN_KBDTYPE	0x0F00	 /*   8 C - keyboard type          (0-15) */
/* 						   ;*         0 - not implemented */
#define	IPS10	1	   /*          1 - ips with 10 fn keys */
#define	AYDIN	2	   /*          2 - aydin */
#define	IPS12	13	   /*         13 - ips with 12 fn keys */
#define	IPS3	14	   /*         14 - ips with TDC3000 station */
#define	TDC3	15	   /*         15 - TDC3000 universal station */
#define	STN_KBDLRN	0x00FF	  /*   0 D - keyboard lrn (not used) */

/*                                      --------------------------------- */
/*                CRTIND             41 !A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P! */
/*                                      --------------------------------- */
/*					Indicators */
#define	IND_MORE	15 /*  A - more data on next page */
/***   integer(2),parameter::IND_    	    = 14 ;* B - */
#define	IND_PAGELOADED	13 /*  C - page loaded (at station) */
#define	IND_IMAGEHELD	12 /*  D - display is being held for image display */
#define	IND_TAGNOTFOUND	11 /*  E - tag not found on tag search operation */
#define	IND_AUTOSELECT	10 /*  F - autoselect in progress */
#define	IND_HENDRIX	9 /*  G - on a HENDRIX page */
#define	IND_PNTDTL	8 /*  H - point detail in progress */
#define	IND_PRVDSP	7 /*  I - previous display in progress */
#define	IND_SUMRPT	6 /*  J - indicates summary report print in progress */
#define	IND_WNDPAGREQ	5 /*  K - windowed page request in progress */
#define	IND_SrvInfoSent	4 /*  L - server information sent */
#define	IND_OPSELECT	3 /*  M - OP/SP select in progress */
/*						    N - */
/*						    O - */
/*						    P - */

/*                                      --------------------------------- */
/*               AUDIBLE             55 !A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P! */
/*                                      --------------------------------- */
#define	STN_SILALL	0x8000	/*  15 A - silence audible (all) */
/*                                          = z'4000';* 14 B - SPARE (not used) */
#define	STN_SNDCRI	0x2000	/*  13 C - sound audible 4 (critical) */
#define	STN_SNDTPSCE	0x1000	/*  12 D - sound audible tps console status event */
#define	STN_SNDTPSSE	0x0800	/*  11 E - sound audible tps system status event */
#define	STN_SNDCMSG	0x0400	/*  10 F - sound audible confirmable message */
#define	STN_SNDIMSG	0x0200	/*  9  G - sound audible informational message */
#define	STN_SNDSYSURG	0x0100	/*  8  H - sound urgent system alarm */
#define	STN_SNDSYSHGH	0x0080	/*  7  I - sound high system alarm */
#define	STN_SNDSYSLOW	0x0040	/*  6  J - sound low system alarm */
#define	STN_SNDALT	0x0020	/*  5  K - sound audible alert */
/*                                          = z'0010';* 4  L - RESERVED (bit positions consistent with CRTAAL) */
/*                                          = z'0008';* 3  M - RESERVED (bit positions consistent with CRTAAL) */
#define	STN_SNDURG	0x0004	/*  2  N - sound audible 3 (urgent) */
#define	STN_SNDHGH	0x0002	/*  1  O - sound audible 2 (high) */
#define	STN_SNDLOW	0x0001	/*  0  P - sound audible 1 (low) */
#define	STN_SNDALL	0x3FE7	/*       - sound audible all (mask) */


/*                                      --------------------------------- */
/*                AUDENB             56 !spare!D!E!F!G!H!I!J!K!L!M!N!O!P! */
/*                                      --------------------------------- */
/*                                          A - B (SPARE) */
#define	STN_ENBCRI	0x2000	/*  13 C - enable audible 4 (critcal) */
#define	STN_ENBTPSCE	0x1000	/*  12 D - enable audible tps console status event */
#define	STN_ENBTPSSE	0x0800	/*  11 E - enable audible tps system status event */
#define	STN_ENBCMSG	0x0400	/*  10 F - enable audible confirmable message */
#define	STN_ENBIMSG	0x0200	/*  9  G - enable audible informational message */
#define	STN_ENBSYSURG	0x0100	/*  8  H - enable urgent system alarm audible */
#define	STN_ENBSYSHGH	0x0080	/*  7  I - enable high system alarm audible */
#define	STN_ENBSYSLOW	0x0040	/*  6  J - enable low system alarm audible */
#define	STN_ENBALT	0x0020	/*  5  K - enable audible alert */
/*                                          = z'0010';* 4  L - RESERVED (bit positions consistent with CRTAAL) */
/*                                          = z'0008';* 3  M - RESERVED (bit positions consistent with CRTAAL) */
#define	STN_ENBURG	0x0004	/*  2  N - enable audible 3 (urgent) */
#define	STN_ENBHGH	0x0002	/*  1  O - enable audible 2 (high) */
#define	STN_ENBLOW	0x0001	/*  0  P - enable audible 1 (low) */
#define	STN_ENBALL	0x3FE7	/*       - enable audible all (mask) */


/*                                      --------------------------------- */
/*                AUDTMPSIL          57 !spare!D!E!F!G!H!I!J!K!L!M!N!O!P! */
/*                                      --------------------------------- */
/*                                          A - B (spare) */
#define	CST_ON	0x2000	/*  12 C - Critcal Audible Alarm Silenced by Timer */
#define	TPSCEST_ON	0x1000	/*  12 D - TPS Console Status Event Silenced by Timer */
#define	TPSSEST_ON	0x0800	/*  11 E - TPS System Status Event Silenced by Timer */
#define	CMST_ON	0x0400	/*  10 F - Confirmable Audible Message Silenced by Timer */
#define	IMST_ON	0x0200	/*  9  G - Informational Audible Message Silenced by Timer */
#define	SYSURGST_ON	0x0100	/*  8  H - Urgent System Alarm Audible Silenced by Timer */
#define	SYSHGHST_ON	0x0080	/*  7  I - High System Alarm Audible Silenced by Timer */
#define	SYSLOWST_ON	0x0040	/*  6  J - Low System Alarm Audible Silenced by Timer */
#define	TST_ON	0x0020	/*  5  K - Alert Audible Alarm Silenced by Timer */
/*                                          = z'0010';* 4  L - RESERVED (bit positions consistent with CRTAAL) */
#define	AST_ON	0x0008	/*  3  M - Alarms Silenced Temporarily by Timer */
#define	UST_ON	0x0004	/*  2  N - Urgent Audible Alarm Silenced by Timer */
#define	HST_ON	0x0002	/*  1  O - High Audible Alarm Silenced by Timer */
#define	LST_ON	0x0001	/*  0  P - Low Audible Alarm Silenced by Timer */


/*                                      --------------------------------- */
/*                CRTCNT             73 |A|B|C|D| level | control level | */
/*                                      --------------------------------- */
#define	CRTCNT_WRD	73  /*  */

#define	CRT_NoAPSCheck	15 /*   A - do not perform APS check */
#define	CRT_ForceTolerance	14 /*   B - allow write of out-of-tolerance value */
#define	CRT_ForceRange	13 /*   C - allow write of out-of-range value */
#define	CRT_CMSONLY_BIT	12 /*   D - Only allow Card Managment operations */

/*                               level - security level, calculated value */
#define	STN_LEVEL_MASK	0x0f00	  /*   field mask */
#define	STN_LEVEL_OFFSET	8        /*   bit offset */

/*                               control level */
#define	STN_CNTLVL_MASK	0x00ff	   /*   field mask */
#define	STN_CNTLVL_OFFSET	0         /*   bit offset */
#define	STN_CNTLVL_MIN	0         /*   minimum control level */
#define	STN_CNTLVL_MAX	255       /*   maximum control level */

/*                                       level - station security level (0-15) */
#define	STN_LVL1	0x00			/*  inhibit alarm ack and data entry */
#define	STN_LVL2	0x01			/*  inhibit data entry */
#define	STN_OPER	0x02			/*  dfd level 0 */
#define	STN_SUPR	0x03			/*  dfd level 1 */
#define	STN_ENGR	0x04			/*  dfd level 2 */
#define	STN_MNGR	0x05			/*  dfd level 3 */
#define	STN_LVLM	0x0f			/*  station level mask */
/*					these flags in GDA security Station Level */
/*                   hsctypes.idl additionally defines flags for */
/*                   the top byte of GDASECURITY->StationLevel */
#define	STN_RANG	0x10			/*  range flag (for CDA controls) */
#define	STN_PROG	0x20			/*  program */
#define	STN_TOLE	0x40			/*  tolerance flag (for CDA controls) */
#define	STN_NOAPS	0x80			/*  flag to indicate not to perform APS check */

/*					level indicator uses acronyms 265 to 280 */
/*					alarm indicator uses acronyms 596 to 599 */


/*                                      --------------------------------- */
/*                CRTCNT2            98 |A|B|C|D|E|F|G|H| IKB SL| STN SL| */
/*                                      --------------------------------- */
#define	CRTCNT2_WRD	98  /*  */

/*                               IKB SL - security level from IKB */
#define	STN_IKB_LEVEL_MASK	0x00f0	  /*   field mask */
#define	STN_IKB_LEVEL_OFFSET	4        /*   bit offset */
/*                               STN SL - security level from Station */
#define	STN_STN_LEVEL_MASK	0x000f	  /*   field mask */
#define	STN_STN_LEVEL_OFFSET	0        /*   bit offset */
/*         see CRTCNT for valid security levels for these fields */
/*         these fields used to calculate level field in CRTCNT */
#define	STN_SECLVL_CALCONLY	0        /*   Calculate Sec Lvl only */
#define	STN_SECLVL_DEFAULT	1        /*   Reset Station Sec Level */
#define	STN_SECLVL_SOFTWARE	2        /*   Set Station Sec Lvl */
#define	STN_SECLVL_IKB	3        /*   Set IKB Sec Lvl */
#define	STN_SECLVL_DEFAULT_ALL	4        /*   Reset Station & IKB Sec Level */


/*       integer*2  CRTPGRHR       ;*     --------------------------------- */
#define	CRTPGRHR	99	   /*   99 ! Pager RequestTask return code ! */
/*       integer*2  CRTPGRCKIE     ;*     --------------------------------- */
#define	CRTPGRCKIE	100	/*  100 ! Pager RequestTask cookie      ! */
/*                                      --------------------------------- */


/*       integer*2  CRTOARMP      ;*      --------------------------------- */
#define	CRTOARMP	114	 /*   114 ! alarm routing min pri (oper)  ! */
/*                                      !  pri  !  sub  !  pri  !  sub  !  (System Alarms !  Process Alarms ) */
/*       integer*2  CRTSAP       ;*       --------------------------------- */
#define	CRTSAP	115	 /* 115,116! pnt schedule add point number ! */
/*       integer*2  CRTSAA       ;*       --------------------------------- */
#define	CRTSAA	117	 /*    117 ! pnt schedule add param number ! */
/*                                      --------------------------------- */
/*                CRTARMP           118 ! alarm routing min pri (stn)   ! */
/*                                      !  pri  !  sub  !  pri  !  sub  !  (System Alarms !  Process Alarms ) */
/*                                      --------------------------------- */
#define	CRTARMP	118
#define	CRT_SYSALM_PRI_MASK	0xF000	
#define	CRT_SYSALM_SUBPRI_MASK	0x0F00	
#define	CRT_ALM_PRI_MASK	0x00F0	
#define	CRT_ALM_SUBPRI_MASK	0x000F	
#define	CRT_SYSALM_PRI_OFFSET	12
#define	CRT_SYSALM_SUBPRI_OFFSET	8
#define	CRT_ALM_PRI_OFFSET	4
#define	CRT_ALM_SUBPRI_OFFSET	0
#define	SYSALM_COMBINED_PRIORITY_MASK	0xFF00	
#define	ALM_COMBINED_PRIORITY_MASK	0x00FF	


/*                                      --------------------------------- */
/*                machineID         155 ! Machine ID (GUID) 16 bytes    ! */
/*                                      --------------------------------- */

/*                                      --------------------------------- */
/*                sessionID         163 ! Machine ID (GUID) 16 bytes    ! */
/*                                      --------------------------------- */

/*       integer*2  DFDCNT       ;*       --------------------------------- */
#define	DFDCNT	171	 /*    171 ! DFD count                     ! */
/*                                      --------------------------------- */

/*                                      --------------------------------- */
/*                CRTASFN           173 ! A ! B ! C ! D ! E ! F ! G ! H ! */
/*                                      --------------------------------- */
/*				Functions that can be redirected to an assocated */
/*				station defined by a 2 bit field (0 = current) */
#define	AssDspStnM	0x0003	 /*  A = associated display  mask */
#define	AssDspStnB	14  /*  A = associated display  bit */
#define	DtlDspStnM	0x0003	 /*  B = detail display  mask */
#define	DtlDspStnB	12  /*  B = detail display  bit */
#define	TndDspStnM	0x0003	 /*  C = trend display  mask */
#define	TndDspStnB	10  /*  C = trend display  bit */
#define	GrpDspStnM	0x0003	 /*  D = group display  mask */
#define	GrpDspStnB	8  /*  D = group display  bit */

#define	CRTFLAGS4	174
/*                                      --------------------------------- */
/*                FLAGS4            174 !A!B!C!D!E!F!G!H!I!J!K!L!   M   ! */
/*                                      --------------------------------- */
/*					More option flags */
#define	AAL_IFNOTON	0x8000	 /*  15 A - allow audible alarm when signed off */
#define	AssDspSingleClick	0x4000	 /*  14  B - associated display - alarm single click enable (EBI) */
#define	DtlDspSingleClick	0x2000	 /*  13  C - detail display - alarm single click enable (EBI) */
/*					 = z'1000' ;* 12  D - spare */
/*					 = z'0800' ;* 11  E - spare */
/*					 = z'0400' ;* 10  F - spare */
/*					 = z'0200' ;* 9  G - spare */
/*					 = z'0100' ;* 8  H - spare */
/*					 = z'0080' ;* 7  I - spare */
#define	STN_IKBKSWDS	0x0040	 /*  6  J - IKB KeySwitch Support disabled */
#define	STN_SNGLSGN	0x0020	 /*  5 K - Did operator sign on using single signon (mask) */
#define	STN_SNGLSGNO	2       /*  5 K - Did operator sign on using single signon (offset) */
#define	STN_SSOALWD	0x0010	 /*  4 L - Is Single signon allowed for this Station (mask) */
#define	STN_SSOALWDO	1       /*  4 L - Is Single signon allowed for this Station (offset) */
#define	STN_SOMTRNS	0x000F	 /*  3-0 M - Signon Manager Transition (4 bits) (mask) */
#define	STN_SOMTRNSO	0       /*  3-0 M - Signon Manager Transition (4 bits) (offset) */

/*                                      --------------------------------- */
/*                FLAGS5       ;*   175 !A!B!C!D!E!F!G!H!I!J!K!L!M!N!O!P! */
/*                                      --------------------------------- */
/*					More option flags */
/*                                        ;* 15 A - */

/*       integer*2  CRTAAL       ;*       --------------------------------- */
#define	CRTAAL	176	 /*   176 ! | |C|T|S|F|I|X|Y|Z|T|M|a|U|H|L! */
/*                                      --------------------------------- */

/*     Note: Changes to position of bits in CRTAAL could affect operation of extalm task */
#define	CAL_ON	0x2000	 /*  C - Critcal Audible Alarm Sounding */
#define	TPSCEAL_ON	0x1000	 /*  T - TPS Console Status Event Audible Alarm Sounding */
#define	TPSSEAL_ON	0x0800	 /*  S - TPS System Status Event Audible Alarm Sounding */
#define	CMSGAL_ON	0x0400	 /*  F - Confirmable Message Audible Alarm Sounding */
#define	IMSGAL_ON	0x0200	 /*  I - Informational Message Audible Alarm Sounding */
#define	SYSURG_ON	0x0100	 /*  X - Urgent System Alarm Audible Sounding */
#define	SYSHGH_ON	0x0080	 /*  Y - High System Alarm Audible Sounding */
#define	SYSLOW_ON	0x0040	 /*  Z - Low System Alarm Audible Sounding */
#define	TAL_ON	0x0020	 /*  T - Alert Audible Alarm Sounding */
#define	MAL_ON	0x0010	 /*  M - Any Message Audible Alarm Sounding */
#define	AAL_ON	0x0008	 /*  a - Any Audible Alarm Sounding */
#define	AAL_ON_BIT	3       /*  Bit number for AAL_ON */
#define	UAL_ON	0x0004	 /*  U - Urgent Audible Alarm Sounding */
#define	UAL_ON_BIT	2       /*  Bit number for UAL_ON */
#define	HAL_ON	0x0002	 /*  H - High Audible Alarm Sounding */
#define	LAL_ON	0x0001	 /*  L - Low Audible Alarm Sounding */
#define	CRTAAL_SYS_OFFSET	6 /*  Offset to system alarm audible bits. Offset to SYSLOW_ON. */

/*       integer*2  CRTNAM       ;*       --------------------------------- */
#define	CRTNAM	180	 /*    180 ! station name (16 characters)  ! */
/*                                      --------------------------------- */
/*                CRTAPSGRP     190-205 |Advanced Param SecLvl Grps (10)| */
/*                                      --------------------------------- */
#define	CRTAPSGRP_WRD	190  /*  */
/*                                      --------------------------------- */
/*                                  206 ! Station connection type       ! */
/*                                      --------------------------------- */
/*     Note: the following settings are also defined by include\src\nips_protocol.h */

#define	CRTTYP_STATION	0x0000			/*  regular station */
#define	CRTTYP_BROWSER	0x0001			/*  browser station */
#define	CRTTYP_DIRECT	0x0002			/*  direct station station */
#define	CRTTYP_CONFIG	0x0003			/*  configuration studio station */
#define	CRTTYP_PABLO	0x0004			/*  PABLO (web based)  station */
#define	CRTTYP_COLLAB	0x0005			/*  Collaboration station */
#define	CRTTYPE_MASK	0x000F			/*  mask of the base station type */
#define	CRTTYPE_MULTIWINDOW_MASK	0x0010		/*  mask of the multiwindow bit */

/*                                      --------------------------------- */
/*                                  215 ! inhibit printouts (crt)       ! */
/*                                      --------------------------------- */
/*                                  216 ! inhibit printouts (operator)  ! */
/*                                      --------------------------------- */
/*                                        bit 0 - inhibit ALL message printout */
/*                                        bit n - inhibit priority n */
/*                                               (refer PRTQUE_DEF) */

/*       integer*2  DFDCNTPS       ;*         --------------------------------- */
#define	DFDCNTPS	217	 /*  217-218 ! Theoretical DFDCNT per sec    ! */
/*                                          --------------------------------- */

/*       integer*2  CLRASFILT       ;*    --------------------------------- */
#define	CLRASFILT	219	 /*  219! clear alarm summary filter    !  (EBI only, ISR204494) */
/*                                      --------------------------------- */
/*                                          0 - flag off */
/*                                        > 0 - clear alarm summary filter */

/*                                      --------------------------------- */
/*                              220-224 ! Spare                         ! */
/*       integer*2  CRTOID       ;*       --------------------------------- */
#define	CRTOID	225	 /*    225 ! Oper ID incl domain/machine   ! */
/*                                      ! name (50 chars)               ! */
/*                                      --------------------------------- */

/*                                  Video/Cardholder comparison display callup */
/*                                      --------------------------------- */
/*                                  302 ! CMS card expiry indication    ! */
/*                                      --------------------------------- */
/*                                        0 - if card not expired */
/*                                        1 - if card about to expire */
/*                                            (ie. within configured expiry warning period) */
/*                                        2 - if card is expired */
/*                                      --------------------------------- */
/*                              303-304 ! CardholderID for video compare! */
/*                                      --------------------------------- */

/*       integer*2  CRTAAP         ;*     --------------------------------- */
#define	CRTAAP	331	/*  331 ! Asset profile number           ! */
/*                                      --------------------------------- */

/*       integer*2  CRTCACM1     ;*       --------------------------------- */
#define	CRTCACM1	333	 /*  333 ! Area capability map 1 (crt)   ! */
/*                                      ! View points, events, other    ! */
/*                                  ... ! (1023 areas, 16 per word)     ! */
/*                                  380 ! (64 words total)              ! */
/*       integer*2  CRTCACM2     ;*       --------------------------------- */
#define	CRTCACM2	397	 /*  397 ! Area capability map 2 (crt)   ! */
/*                                      ! Control points, other         ! */
/*                                  ... ! (1023 areas, 16 per word)     ! */
/*                                  460 ! (64 words total)              ! */
/*       integer*2  CRTCACM3     ;*       --------------------------------- */
#define	CRTCACM3	461	 /*  461 ! Area capability map 3 (crt)   ! */
/*                                      ! View alarms, alerts, msgs     ! */
/*                                  ... ! (1023 areas, 16 per word)     ! */
/*                                  524 ! (64 words total)              ! */
/*       integer*2  CRTCACM4     ;*       --------------------------------- */
#define	CRTCACM4	525	 /*  525 ! Area capability map 4 (crt)   ! */
/*                                      ! Ack alarms, alerts, msgs      ! */
/*                                  ... ! (1023 areas, 16 per word)     ! */
/*                                  588 ! (64 words total)              ! */
/*       integer*2  CRTOACM1     ;*       --------------------------------- */
#define	CRTOACM1	589	 /*  589 ! Area capability map 1 (oper)  ! */
/*                                      ! View points, events, other    ! */
/*                                  ... ! (1023 areas, 16 per word)     ! */
/*                                  652 ! (64 words total)              ! */
/*       integer*2  CRTOACM2     ;*       --------------------------------- */
#define	CRTOACM2	653	 /*  653 ! Area capability map 2 (oper)  ! */
/*                                      ! Control points, other         ! */
/*                                  ... ! (1023 areas, 16 per word)     ! */
/*                                  716 ! (64 words total)              ! */
/*                                      --------------------------------- */
/* The following constants should only be used from Fortran code */
/* C/C++/C# should use the values defined in include\src\sor_api_types.h enumeration enum ECapabilityType */
#define	F_SOR_CAP_VIEW_POINTS	4  /*  can view point.param data */
#define	F_SOR_CAP_CTRL_POINTS	5  /*  can control point.param data */
#define	F_SOR_CAP_VIEW_ALARMS	6  /*  can view alarms, system alarms, alerts and messages */
#define	F_SOR_CAP_ACK_ALARMS	7  /*  can ack alarms, system alarms, alerts and messages */
#define	F_SOR_CAP_VIEW_EVENTS	8  /*  can view events, SOEs, activities & recipes */
#define	F_SOR_CAP_VIEW_OTHER	9  /*  can view other asset bound data, eg trends, groups, reports, ... */
#define	F_SOR_CAP_CTRL_OTHER	10 /*  can modify other asset bound data, eg trends, groups, reports, ... */

#define	F_PERM_FULL	4         /*  can view all, control, acknowledge */
#define	F_PERM_ACKN	3         /*  can view all, acknowledge */
#define	F_PERM_VIEW	2	     /*  can view all */
#define	F_PERM_VIEW_WO_ALM	1  /*  can view all except alarms, system alarms, alerts * messages */
#define	F_PERM_DENY	0         /*  denied */

#define	SOR_CAP_MAP_COUNT	4  /*  the number of asset capability maps per operator & crt */

#define	DFDPERM_FULL	3	/*  can read, write, acknowledge */
#define	DFDPERM_ACKN	2	/*  can read, acknowledge */
#define	DFDPERM_READ	1	/*  can read */
#define	DFDPERM_DENY	0	/*  denied */

/*       integer*2  CRTIPADDR       ;*    --------------------------------- */
#define	CRTIPADDR	861	 /*  861! IP Address (8 words)          ! */
/*       integer*2  CRTIPNAME       ;*    --------------------------------- */
#define	CRTIPNAME	869	 /*  869! IP Name (16 words)            ! */
/*                                      --------------------------------- */

/*       integer*2  CRTAAPNAME       ;*      --------------------------------- */
#define	CRTAAPNAME	3264	/*  3264 ! Asset profile name            ! */
/*                                         --------------------------------- */

/*     integer*2  ASENDTIME      ;*           --------------------------------- */
/*     parameter (ASENDTIME=3281);* 3281-3284 !  Audible Suppression End Time ! */
/*                                            --------------------------------- */
/*                ASFLAG                 3285 !A!B!C!                   !N!O!P! */
/*                                            --------------------------------- */
/*					Audible Suppression Flags */
#define	CRT_ASF_URGVISIBLE_BIT	15        /*  A - Urgent level indicator is visible */
#define	CRT_ASF_URGVISIBLE	0x8000	
#define	CRT_ASF_HGHVISIBLE_BIT	14        /*  B - High priority indicator is visible */
#define	CRT_ASF_HGHVISIBLE	0x4000	
#define	CRT_ASF_LOWVISIBLE_BIT	13        /*  C - Low priority indicator is visible */
#define	CRT_ASF_LOWVISIBLE	0x2000	

#define	CRT_ASF_CANSUPPHIGH_BIT	2         /*  N - Set if high priority alarm can be suppressed */
#define	CRT_ASF_CANSUPPHIGH	0x0004	
#define	CRT_ASF_ABOVESECLVL_BIT	1         /*  O - Set if current CRT security level is above required */
#define	CRT_ASF_ABOVESECLVL	0x0002	
#define	CRT_ASF_ENABLED_BIT	0         /*  P - Set if audible suppression is enabled for this CRT */
#define	CRT_ASF_ENABLED	0x0001	
#define	CRT_ASF_DEFAULT	0xE000	   /*  The default value store in this word */


/*       integer*2  CRTOACM3        ;*          --------------------------------- */
#define	CRTOACM3	3286	 /*      3286 ! Asset Capability map 3 (oper) ! */
/*                                            ! View alarms, alerts, msgs     ! */
/*                                        ... ! (1024 areas, 16 per word)     ! */
/*                                       3349 ! (64 words total)              ! */
/*       integer*2  CRTOACM4        ;*          --------------------------------- */
#define	CRTOACM4	3350	 /*      3350 ! Asset Capability map 4 (oper) ! */
/*                                            ! Ack alarms, alerts, msgs      ! */
/*                                        ... ! (1024 areas, 16 per word)     ! */
/*                                       3413 ! (64 words total)              ! */
/*       integer*2  CRTCONALMSHOW   ;*          --------------------------------- */
#define	CRTCONALMSHOW	3414	/*  3414 ! Asset Capability map 5 (cons) ! */
/*                                            ! Console Alarm Show            ! */
/*                                        ... ! (1024 areas, 16 per word)     ! */
/*                                       3477 ! (64 words total)              ! */
/*                                            --------------------------------- */
/*     Asset Capability map constants */

/*     NOTE: The above maps should be accessed via functions in: */
/*           - std\clib\cpnt\src (entmodel*.cpp) - for configuration of assets (Asset tree */
/*               manipulation) */
/*           - std\clib\cmis\src (sor*.cpp, oper*.cpp & group*.cpp) - for runtime enforcement of */
/*               asset capabilities and other support functionality. */
/*           Rather than direct manipulation of the array. */


#define	CRTCONALM_ENABLE_ALL	0x00FF	 /*  used to enable all alarms for Asset Capability Map 5 - Console alarm show */

/*                                            --------------------------------- */
/*                                       3585 !                               ! */
/*                                        ... ! default alarm view (40 words) ! */
/*                                       3624 !                               ! */
/*                                            --------------------------------- */
/*       integer*2  CRTDEFAULTALMVIEW   ;* */
#define	CRTDEFAULTALMVIEW	3585	 /*  */


/*                                            --------------------------------- */
/*                                       3625 !                               ! */
/*                                        ... ! default dashboard  (40 words) ! */
/*                                       3664 !                               ! */
/*                                            --------------------------------- */
/*       integer*2  CRTDEFAULTDASHBOARD  ;* */
#define	CRTDEFAULTDASHBOARD	3625	 /*  */

/*                                            --------------------------------- */
/*                                       3665 !                               ! */
/*                                        ... !   40 spare                    ! */
/*                                       3704 !                               ! */
/*                                            --------------------------------- */

#if	!defined( POINT_SERVER )
#if	!defined( HSC_POINT_SERVER )



/*     STRUCTURE: */

	struct t_CRTTBL {
		/* sequence */
		int2   flags1;              /*    1 crt flags */
		int2   crtsli;              /*    2 select index */
		int2   crtsxc;              /*    3 select x coord */
		int2   crtsyc;              /*    4 select y coord */
		int2   crtsid;              /*    5 select object id */
		int2   crtssq;		/*    6 select sequence number */
		int2   spare7;		/*    7 select... */
		int2   crtstr;              /*    8 select timer */
		int2   crtftr;              /*    9 freeze timer */
		int2   crtitr;              /*   10 invalid request timer */
		int2   crtatr;              /*   11 audible alarm timer */
		int2   crtrtr;              /*   12 re-alarm timer */
		int2   crtidt;              /*   13 crt idle timer */
		int2   flags2;              /*   14 crt flags 2 */
		int2   flags3;              /*   15 crt flags 3 */
		int2   dspnum;              /*   16 display number */
		int2   dsptyp;              /*   17 display type */
		int2   wndactv[4];          /*   18 window active map */
		int2   crtarl;              /*   22 alarm update rate limit timer */
		int2   crtpri;              /*   23 log and alarm printer numbers */
		int2   crtpxc;		/*   24 pushbutton x coord */
		int2   crtpyc;		/*   25 pushbutton y coord */
		int2   lvl3psw[LVLPSW_SZ];  /*   26 level 3 password (no login) */
		int2   lvl4psw[LVLPSW_SZ];  /*   29 level 4 password (no login) */
		int2   lvl5psw[LVLPSW_SZ];  /*   32 level 5 password (no login) */
		int2   defaultalarmtrend;   /*   35 default alarm trend */
		int2   crtapsopr;           /*   36 Advanced security level for operator, 0 if APS not in use, else rec # from seclvl_def */
		int2   crtkbl;              /*   37 keyboard lrn */
		int2   crtsta;              /*   38 crt state */
		int2   crtstawnd;           /*   39 crt state window */
		int2   crtltp;              /*   40 loop tune time period (1 min, 1 hour, etc) */
		int2   crtind;              /*   41 indicators */
		int2   crtas1;              /*   42 associated CRT 1 */
		int2   crtas2;              /*   43 associated CRT 2 */
		int2   crt2nd;              /*   44 secondary crt number */
		int2   nrmupd;              /*   45 normal update period of window */
		int2   fstupd;              /*   46 fast update period for window */
		int2   crthty;              /*   47 history type */
		int2   crthnm;              /*   48 history number */
		int2   crthod;              /*   49 history offset (date) */
		int2   crthot;              /*   50 history offset (time) */
		int2   crthtp;              /*   51 history time period (1 min, 1 hour, etc) */
		int2   crtcst;              /*   52 interface_type(controller status summary) */
		int2   crtcsn;              /*   53 interface_num (controller status summary) */
		int2   crtcsi;              /*   54 interface_index(controller status summary) */
		int2   audible;             /*   55 sound audible flags */
		int2   audenb;              /*   56 enable audible annunciation flags */
		int2   audtmpsil;           /*   57 audible temporary silence flags */
		int2   spare58[64-58];      /*   58-63 spare */
		int2   lastfn;		/*   64 last function processed */
		int2   fstkeyupd;           /*   65 fast key update period for window */
		int2   crtnxtcrt;		/*   66 next display goes to this crt */
		int2   crtnxtcxx;		/*   67 next display goes to this CSTNxx */
		int2   crtnxtcyy;		/*   68 next display goes to this CSTNxx-y */
		HSCTIME crtlckrel;	/*   69 time that station lockout is lifted */
		int2   crtcnt;              /*   73 operator level */
		int2   crtcli;		/*   74 control index */
		int2   crtcid;		/*   75 control object id */
		int2   crtcsq;		/*   76 control sequence number */
		PNTNUM crtcpt;              /*   77 control point number (sometimes also operator number) */
		PRMNUM crtcpm;              /*   79 control parameter */
		int2   crtcpo;              /*   80 control parameter offset */
		double crtcvl;              /*   81 control value */
		int4   crtarc;              /*   85 alarm record cookie */
		int2   crtomn;              /*   87 operator message number */
		int2   crtoito;             /*   88 operator idle timeout value */
		int2   crtdht;              /*   89 point detail page hold time */
/*                                       ;*     If < 0 then auto callup disabled */
		int2   crtfll;              /*   90 no of failed login attemts */
		int2   crtono;              /*   91 operator record number */
		int2   crtoxc;              /*   92 operator prompt X coord */
		int2   crtoyc;              /*   93 operator prompt Y coord */
		int2   spare94;             /*   94 */
		PNTNUM crtapt;              /*   95 alarm point number */
		PRMNUM crtapm;              /*   97 alarm parameter number */
		int2   crtcnt2;		/*   98 security level component values from STN & IKB */
		int2   crtpgrhr;            /*   99 Pager RequestTask return code */
		int2   crtpgrckie;          /*  100 Pager RequestTask cookie */
		PNTNUM crtdpt;              /*  101 duress control point number */
		PRMNUM crtdpm;              /*  103 duress control parameter */
		int2   spare104;            /*  104 */
		float  crtdpv;              /*  105 duress control value */
		int2   crtheartbeat;        /*  107 do full update every this seconds */
		int2   spare108[5];		/*  108 */
		int2   crtdlrn;             /*  113 lrn of DSPLY task */
		int2   crtoarmp;            /*  114 alarm routing minimum priority (operator) */
		PNTNUM crtsap;              /*  115 schedule add point */
		PRMNUM crtsaa;              /*  117 schedule add parameter */
		int2   crtarmp;             /*  118 alarm routing minimum priority (station) */
		float  crtsav;              /*  119 schedule add value */
		int2   crtsad;              /*  121 schedule add date */
		int2   crtsat;              /*  122 schedule add time */
		int2   crtsay;              /*  123 schedule add type */
		int2   crtsar;              /*  124 schedule add priority */
		int2   spare125[155-125];   /*  125 */
		int4   machineID[4];        /*  155 Machine ID (GUID - binary) */
		int4   sessionID[4];        /*  163 Session ID (GUID - binary) */
		int2   dfdcnt;              /*  171 DFD count */
		int2   crtas3;              /*  172 associated CRT 3 */
		int2   crtasfn;             /*  173 functions redirected to associated crts */
		int2   flags4;              /*  174 crt flags 4 - even more options */
		int2   flags5;              /*  175 crt flags 5 - */
		int2   crtaal;              /*  176 audible alarm sounding */
		PNTNUM crtpdp;              /*  177 point detail point number */
		int2   crtwrkuser;          /*  179 the LRN of the task that last used CRTWRK scratchpad */
		int2   crtnam[CRTNAM_SZ/2]; /*  180 station name (16 characters) */
		int2   crtrel;              /*  188 station release number */
		int2   crtmnr;              /*  189 station minor release number */
		int2   crtapsgrp[CRTGRPS_SZ]/*  190-205 advanced security level for groups, 0 if APS not in use, else rec # from seclvl_def */;
		int2   crttyp;              /*  206 station type (multi-window etc) */
		HSCTIME crtlft;           /*  207 last function time (HSCTIME) */
		int2   crtrtu;              /*  211 Camera switcher rtu number */
		int2   crtccn;              /*  212 Camera number */
		int2   crtcmn;              /*  213 Camera Monitor */
		int2   crtcmd;              /*  214 Command number (CMDTBL) */
		int2   crtpin;              /*  215 inhibit printouts (crt) */
		int2   crtoin;              /*  216 inhibit printouts (operator) */
		float  dfdcntps;            /*  217 Theoretical DFDCNT per sec */
		int2   clrasfilt;           /*  219 clear alarm summary filter 	 */
		int2   spare220[225-220];   /*  220 */
		int2   crtoid[CRTOID_SZ];   /*  225 Oper ID incl domain/machine name (50 chars) */
		int2   attempt;             /*  250 display callup attempt */
		int4   filoff;              /*  251 data file offset */
		int4   recoff;              /*  253 data record offset */
		int4   fldoff;              /*  255 crt field offset */
		int2   crtdts[CRTDTS_SZ];   /*  257 PNTDTL tag search string (82 ch) */
		int2   crtsrchloc;          /*  298 PNTDTL search location */
		int2   crtsrchflg;          /*  299 PNTDTL search flags */
		int2   spare300[302-300];   /*  300 */
		int2   crtcrdexp;           /*  302 Card expiry indication (used with 303) */
		int4   crtchid;             /*  303 CardholderID for video compare callup. */
		int2   spare305[308-305];   /*  305-307 */
		int2   crtsalrtu;           /*  308 system alarm line rtu */
		int2   crtsalchn;           /*  309 system alarm line channel */
		PRMNUM crtsalprm;           /*  310 system alarm line point parameter */
		int2   crtnumgrps;          /*  311 Number of Groups Oper is a member of */
		int2   crtgrps[CRTGRPS_SZ]; /*  312 Groups Oper is a member of */
		int2   operalarmtrend;      /*  328 Alarm trend for Oper */
		int2   spare329[331-329];   /*  329 */
		int2   crtaap;              /*  331 Asset/responsibility profile record number (crt) */
		int2   crtoap;              /*  332 Asset/responsibility profile record number (operator) */
		int2   crtcacm1[ACM_SZ];    /*  333 CRT Asset Capability Map 1 (View Data) */
		int2   crtcacm2[ACM_SZ];    /*  397 CRT Asset Capability Map 2 (Control Data) */
		int2   crtcacm3[ACM_SZ];    /*  461 CRT Asset Capability Map 3 (View Alarms) */
		int2   crtcacm4[ACM_SZ];    /*  525 CRT Asset Capability Map 4 (Ack Alarms) */
		int2   crtoacm1[ACM_SZ];    /*  589 Operator Asset Capability Map 1 (View Data) */
		int2   crtoacm2[ACM_SZ];    /*  653 Operator Asset Capability Map 2 (Control Data) */
		PNTNUM crtsalpnt;           /*  717 system alarm line point */
		int4   crtsalrec;           /*  719 system alarm line record cookie */
		int2   crtadn;              /*  721 alarm previous display */
		int2   crtadt;              /*  722 alarm previous display type */
		int4   crtafo;              /*  723 alarm previous file offset */
		int4   crtaro;              /*  725 alarm previous record offset */
		int4   crtafl;              /*  727 alarm previous field offset */
		int2   crtaar;              /*  729 alarm previous alarm record */
		int2   crtasp1;             /*  730 alarm previous spare */
		int2   crtipg[130];         /*  731 idle timeout page */
		int2   crtipaddr[CRTIPADDR_SZ]; /*  861 IP address */
		int2   crtipname[CRTIPNAME_SZ]; /*  869 client machine name (16 chars+16 reserved) */
		int2   crtoidname[CRTOID_SZ];   /*  885 operator ID full name (50 chars) */
		int2   crtdtn[CRTDTN_SZ];       /*  910 Last PNTDTL tagname (82 ch) */
		int4   crtdtt;                  /*  951 Last PNTDTL tagtype */
		int4   crtdtr;                  /*  953 Last PNTDTL tagnumber */
		int4   crtdtp;                  /*  955 Last PNTDTL display page */
		int4   spare957;                /*  957 */
		int4   clientport;              /*  959 ripsd client port, stored on connect */
		int4   clientip;                /*  961 ripsd client ip, stored on connect */
		int4   network;                 /*  963 ripsd network handle, stored on connect */
/*                                           ;*     48 LEDs, State map have 2 bits per LED */
/*                                           ;*     See LED_FUN for LED state definitions */
		int2   LedRedState[6];          /*  965 red led state map */
		int2   LedYelState[6];          /*  971 yellow led state map */
		PNTNUM LedPnts[CRTNUMLEDPNTS];  /*  977 points associated with LEDs (configured array) */
		int2   dspnam[DSPNMSZ/2];       /*  1073 current display name */
		int2   crtadnm[DSPNMSZ/2];      /*  2097 alarm previous display name */
		int2   crtcvlch[CRTCVL_SZ/2];   /*  3121 control value (DT_CHAR) */
		int4   crtcfil;                 /*  3249 control file number */
		int4   crtcrec;                 /*  3251 control record number */
		int4   crtcwrd;                 /*  3253 control word number */
		int2   crtcbit;                 /*  3255 control bit number */
		int2   crtcnumbit;              /*  3256 control bit count */
		int2   crtcdfdtyp;              /*  3257 control DFD type */
		int2   spare3258[6];            /*  3258 */
		int2   crtaapname[AASPRF_NAMSZ/2]; /*  3264 Asset/responsibility profile name (crt), cached from AASPRF */
		int2   crtaapminseclvl;         /*  3272 Minimum security level to change the asset/responsibility profile */
		int2   crtaapm[AAPMAPSZ];       /*  3273 Asset/responsibility profile bitmap */
		HSCTIME asendtime;            /*  3281 current audible suppression end time (HSCTIME) */
		int2   asflag;                  /*  3285 audible suppression state flag */
		int2   crtoacm3[ACM_SZ];        /*  3286 Operator Asset Capability Map 3 (View Alarms) */
		int2   crtoacm4[ACM_SZ];        /*  3350 Operator Asset Capability Map 4 (Ack Alarms) */
		int2   crtconalmshow[ACM_SZ];   /*  3414 Asset Capability Map 5 - Console alarm show */
		int2   spare3478;               /*  3478 spare flag, padding to ensure next field is at correct offset */
		HSCTIME crtacmchg;            /*  3479 Last change time of either the crtoacm* or crtcacm* Capability Maps */
		int2   spare3483[102];          /*  */
		int2   crtdefaultalmview[MAXSUMMARYVIEWNAMESZ];     /* 3585 Default alarm view (40 words) */
		int2   crtdefaultdashboard[MAXSUMMARYVIEWNAMESZ];     /* 3625 Default dashbaord(40 words) */
		int2   spare3665[40];           /*  3665 40 words reserved for default view enhancement */
	};                     /*  3705 */

#if	defined(COMMON_EXISTS)
/*       type (t_CRTTBL) GBcrttbl(NUM_CRTS) */
/*       equivalence (CRTTBL , GBcrttbl) */
#endif	

#include	"src/wndtbl_def"

#endif	
#endif	

#endif	
